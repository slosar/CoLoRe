global:
{
  #Output prefix. Output will be in prefix_<node ID>.<fits/txt>
  prefix_out= "out";
  #Output format. Select HDF5, FITS or ASCII
  output_format= "FITS";
  #Output Gaussian overdensity field at z=0?
  output_density= true
  #Path to power spectrum at z=0. Power spectrum file must
  #be in CAMB format: k (h/Mpc), P(k) (Mpc/h)^3.
  pk_filename= "test_files/Pk_CAMB_test.dat"
  #This redshift range also defines the size of the box
  z_min= 0.001
  z_max= 0.450
  #Extra Gaussian smoothing scale [Mpc/h] (set to a
  #negative value if you don't want any smoothing)
  r_smooth= 10.
  #Do you want to smooth the Newtonian potential as well?
  smooth_potential= true
  #Will use a Cartesian grid with n_grid^3 cells
  n_grid= 512
  #RNG seed note that output will depend on number of nodes, etc not only
  #on the RNG seed
  seed= 1001
  write_pred=false
  pred_dz=0.1
}

cosmo_par:
{
  #Non-relativistic matter
  omega_M= 0.3
  #Dark energy
  omega_L= 0.7
  #Baryons
  omega_B= 0.05
  #Hubble parameter (in units of 100 km/s/Mpc)
  h= 0.7
  #Dark energy equation of state
  w= -1.0
  #Primordial scalar spectral index, used only to extrapolate
  #P(k) at low k end (-3 used at high k end)
  ns= 0.96
  #Power spectrum normalization. The input power spectrum will be
  #renormalized to this sigma8
  sigma_8= 0.8
}

#For each galaxy population, create a section called srcsX, starting with X=1
srcs1:
{
  #Path to N(z) file. Should contain two columns
  # 1-> z, 2-> dN(z)/dz*dOmega
  # with dN/dzdOmega in units of deg^-2
  # Include one name per population, separated by spaces
  nz_filename= "test_files/Nz_test.txt"
  #Path to bias file. Should contain two columns
  # 1-> z, 2-> b(z)
  # Include one name per population, separated by spaces
  bias_filename= "test_files/Bz_test.txt"
  #Do you want to include shear ellipticities?
  include_shear= true
}

srcs2:
{
  nz_filename= "test_files/Nz2_test.txt"
  bias_filename= "test_files/Bz2_test.txt"
  include_shear= true
}

imap1:
{
  tbak_filename= "test_files/Tz_test.txt"
  bias_filename= "test_files/Bz_test.txt"
  freq_list= "test_files/nuTable.txt"
  freq_rest= 1420.405
  nside= 32
}

kappa:
{
  z_out= [0.4]
  nside= 64
}
